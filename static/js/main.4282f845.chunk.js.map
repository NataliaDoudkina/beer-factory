{"version":3,"sources":["styles.js","components/beer-details.js","components/individual-beer.js","components/beer-list.js","components/searchbox.js","App.js","reportWebVitals.js","index.js"],"names":["styles","Title","fontWeight","Btn","border","borderRadius","fontSize","backgroundColor","color","BeerCardStyle","BeerListStyle","listStyle","BeerDetails","beer","clickBtnHideDetails","useState","ingredientsNames","setIngredientsNames","useEffect","names","Object","keys","ingredients","onClick","style","class","boil_volume","value","unit","brewers_tips","str","arr","contributed_by","split","pop","join","modifiedContributedBy","description","first_brewed","food_pairing","map","el","name","Array","tagline","volume","Beer","padding","setPadding","btnIsShown","setBtnIsShown","clicked","setClicked","imgColClass","setImgColClass","details","setDetails","titleAndTaglineStyle","paddingTop","textAlign","paddingLeft","className","onMouseEnter","src","image_url","alt","BeerList","message","beers","beerSearched","length","id","SearchBox","searchByName","type","onChange","e","target","placeholder","App","setBeers","beersSearched","setBeersSearched","setMessage","fetch","then","result","json","data","toLowerCase","trim","filter","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4282f845.chunk.js","sourcesContent":["const Title={\r\n    fontWeight:\"bold\"\r\n}\r\n\r\n\r\nconst Btn={\r\n    border:\"1px solid black\",\r\n    borderRadius:25,\r\n    fontSize:20,\r\n    backgroundColor:\"black\",\r\n    color:\"white\",\r\n}\r\n\r\nconst BeerCardStyle={\r\n    backgroundColor: \"white\",\r\n    border: \"2px solid white\",\r\n    borderRadius: 5,\r\n}\r\n\r\nconst BeerListStyle={\r\n    listStyle:\"none\"\r\n}\r\n\r\nconst styles={\r\n    Title,\r\n    Btn:Btn,\r\n    BeerCardStyle,\r\n    BeerListStyle\r\n\r\n   \r\n}\r\n\r\n\r\n\r\nexport default styles;","import React, { useEffect, useState } from \"react\";\r\nimport \"../beer.css\";\r\nimport styles from \"../styles\";\r\n\r\nconst BeerDetails = ({ beer, clickBtnHideDetails }) => {\r\n  const [ingredientsNames, setIngredientsNames] = useState([]);\r\n\r\n  const modifiedContributedBy = (str) => {\r\n    //remove <samjbmason> from the value of contributed_by\r\n    str = beer.contributed_by;\r\n    let arr = str.split(\" \");\r\n    arr.pop();\r\n    str = arr.join(\" \");\r\n    return str;\r\n  };\r\n\r\n  useEffect(() => {\r\n    //get Ingredients from the beer object and display them (names only)\r\n\r\n    let names = [];\r\n    names = Object.keys(beer.ingredients);\r\n    setIngredientsNames(names);\r\n  }, [beer.ingredients]);\r\n\r\n  const handleClick = () => {\r\n    clickBtnHideDetails();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleClick} style={styles.Btn}>\r\n        Hide details\r\n      </button>\r\n      <ul class=\"list-group\" style={{ listStyle: \"disc\" }}>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>boil_volume:&nbsp;</span>\r\n          {beer.boil_volume.value}&nbsp;\r\n          {beer.boil_volume.unit}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>brewers_tips: </span>\r\n          {beer.brewers_tips}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>contributed_by:&nbsp;</span>\r\n          {modifiedContributedBy(beer.contributed_by)}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>description:&nbsp;</span>\r\n          {beer.description}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>first_brewed:&nbsp;</span>\r\n          {beer.first_brewed}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>food_pairing:&nbsp;</span>\r\n\r\n          <ul>\r\n            {beer.food_pairing.map((el) => (\r\n              <li>{el}</li>\r\n            ))}\r\n          </ul>\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>ingredients:&nbsp;</span>\r\n          {ingredientsNames.map((name) => (\r\n            <ul>\r\n              {\" \"}\r\n              <li class=\"p-0\">{name}:</li>\r\n              <ul>\r\n                {beer.ingredients[name] instanceof Array ? (\r\n                  beer.ingredients[name].map((el) => (\r\n                    <li class=\"p-0\">{el[\"name\"]}</li>\r\n                  ))\r\n                ) : (\r\n                  <li class=\"p-0\">\r\n                    {name} : {beer.ingredients[name]}\r\n                  </li>\r\n                )}\r\n              </ul>\r\n            </ul>\r\n          ))}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>tagline:&nbsp;</span>\r\n          {beer.tagline}\r\n        </li>\r\n        <li class=\"list-group-item border-0 p-0\">\r\n          <span>volume:&nbsp;</span>\r\n          {beer.volume.value}&nbsp;\r\n          {beer.volume.unit}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeerDetails;\r\n","import React, { useState } from \"react\";\r\nimport BeerDetails from \"./beer-details\";\r\nimport styles from \"../styles\";\r\n\r\nconst Beer = ({ beer }) => {\r\n  const [padding, setPadding] = useState(\"10%\");\r\n  const [btnIsShown, setBtnIsShown] = useState(false);\r\n  const [clicked, setClicked] = useState(false);\r\n  const [imgColClass, setImgColClass] = useState(\"col-sm-2 d-flex\");\r\n  const [details, setDetails] = useState(\"col-sm-9 offset-sm-1\");\r\n\r\n  const titleAndTaglineStyle = {\r\n    paddingTop: padding,\r\n    textAlign: \"start\",\r\n    paddingLeft: \"3%\",\r\n  };\r\n\r\n  const handleHover = () => {\r\n    setPadding(\"5%\");\r\n\r\n    if (clicked) {\r\n      setBtnIsShown(false);\r\n    } else {\r\n      setBtnIsShown(true);\r\n    }\r\n  };\r\n\r\n  const clickBtnShowDetails = () => {\r\n    //changed the  size of the elements by changing their bootstrap 5 classes\r\n    setClicked(() => true);\r\n    setImgColClass(\"col-sm-3 d-flex\");\r\n    setDetails(\"col-sm-8 offset-sm-1\");\r\n    setBtnIsShown(false);\r\n  };\r\n\r\n  const clickBtnHideDetails = () => {\r\n    setBtnIsShown(true);\r\n    setClicked(false);\r\n    setImgColClass(\"col-sm-2 d-flex\");\r\n    setDetails(\"col-sm-9 offset-sm-1\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"row m-5\"\r\n      style={styles.BeerCardStyle}\r\n      onMouseEnter={handleHover}\r\n    >\r\n      <div className=\"row  pt-4 pb-2\">\r\n        <div className={imgColClass}>\r\n          <img\r\n            src={beer.image_url}\r\n            className=\"img-fluid\"\r\n            alt={`bottle of beer ${beer.name}`}\r\n          />\r\n        </div>\r\n        <div className={details} style={titleAndTaglineStyle}>\r\n          <h1>\r\n            <b>{beer.name}</b>\r\n          </h1>\r\n\r\n          <p>\r\n            <b>{beer.tagline}</b>\r\n          </p>\r\n          {btnIsShown ? (\r\n            <button style={styles.Btn} onClick={clickBtnShowDetails}>\r\n              Show details\r\n            </button>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {clicked ? (\r\n            <div className=\"col\">\r\n              <BeerDetails\r\n                beer={beer}\r\n                clickBtnHideDetails={clickBtnHideDetails}\r\n              />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Beer;\r\n","import React from \"react\";\r\nimport Beer from \"./individual-beer\";\r\nimport styles from \"../styles\";\r\n\r\nconst BeerList = ({message, beers, beerSearched }) => {\r\n   \r\n \r\n  return (\r\n    <div>\r\n   \r\n   <p><b>{message}</b></p>\r\n      <ul className=\"list-group\" style={styles.BeerListStyle}>\r\n        {beerSearched.length > 0\r\n          ? beerSearched.map((beer) => (\r\n              <li className=\" pt-4\" key={beer.id}>\r\n                <Beer beer={beer}  />\r\n              </li>\r\n            ))\r\n          : beers.map((beer) => (\r\n              <li className=\"pt-4\" key={beer.id}>\r\n                <Beer beer={beer}  />\r\n              </li>\r\n            ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeerList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchByName }) => {\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <input\r\n        type=\"search\"\r\n        className=\"form-control\"\r\n        onChange={(e) => searchByName(e.target.value)}\r\n        placeholder=\"Search...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BeerList from \"./components/beer-list\";\nimport SearchBox from \"./components/searchbox\";\n\nfunction App() {\n  // Some of the solutions might not be very efficient if the Api contained a lot more values and more complex structures.\n\n  //initial array of beers\n  const [beers, setBeers] = useState([]);\n  //beers array after search\n  const [beersSearched, setBeersSearched] = useState([]);\n\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://api.punkapi.com/v2/beers\")\n      .then((result) => result.json())\n      .then((data) => setBeers(data));\n  }, []);\n\n  const searchByName = (str) => {\n    //search works regardless the case\n    str = str.toLowerCase().trim();\n    let names = [];\n    names = beers.filter((beer) => beer.name.toLowerCase().includes(str));\n    if (names.length === 0) {\n      setMessage(\"no beers found\");\n      setBeersSearched(beers)\n    } else {\n      setMessage(\"\");\n      setBeersSearched(names);\n    }\n  };\n  return (\n    <div className=\"container-fluid App\">\n      <header>\n        <h1>\n          <b>Beer Factory</b>\n        </h1>\n      </header>\n      <div className=\"row justify-content-md-center \">\n        <div className=\"row\">\n          <div className=\"col\">\n            <SearchBox searchByName={searchByName} />\n          </div>\n        </div>\n      </div>\n      <div className=\"col-sm-12 pt-5 \">\n        <BeerList\n          message={message}\n          beers={beers}\n          beerSearched={beersSearched}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}